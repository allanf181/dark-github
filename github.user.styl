/* ==UserStyle==
@name         Dark-GitHub
@namespace    github.com/vednoc/dark-github
@description  Dark and light, very customizable theme for GitHub.
@author       vednoc <vednoc@pm.me> (https://github.com/vednoc)
@homepageURL  https://github.com/vednoc/dark-github
@supportURL   https://github.com/vednoc/dark-github/issues
@updateURL    https://github.com/vednoc/dark-github/raw/master/github.user.styl
@version      0.5.0
@license      MIT
@preprocessor stylus

@var checkbox cg_debug     'Color generator debug' 0
@var select   cg_theme     'Base color-scheme toggle' {
    'Custom colors   *': 'custom',
    'Dark blue (old)  ': 'old',
    'Dark gray (new)  ': 'new',
}
@var color    cg_bg        'Base background color' #1f232a
@var color    cg_fg        'Base foreground color' #eeeeee
@var color    cg_ac        'Base accent color    ' #7289da

@var range    _bg_a        'Adjust background color tones' [0, -25, 25, 0.1, '%']
@var range    _fg_a        'Adjust foreground color tones' [0, -25, 25, 0.1, '%']
@var range    _ac_a        'Adjust accent color tones    ' [0,   0, 25,   1, '%']
@var range    _sc_a        'Adjust syntax color tones    ' [0,   0, 25,   1, '%']

@var text     f_ui         'UI font' ''font_name''
@var text     f_mono       'Monospace font' ''font_name''

@var checkbox navbar_sticky 'Use sticky position for the navbar' 0
@var checkbox latest_commit 'Use neutral colors in latest commit' 0
@var checkbox readme_header 'Use old readme header design' 0
@var checkbox short_headers 'Use shorter headers' 0

@var color    _red         'Base red color              ' #f07178
@var color    _orange      'Base orange color           ' #f78c6c
@var color    _yellow      'Base yellow color           ' #ffcb6b
@var color    _green       'Base green color            ' #aede62
@var color    _cyan        'Base cyan color             ' #89ddff
@var color    _blue        'Base blue color             ' #82aaff
@var color    _magenta     'Base magenta color          ' #9a91ea
@var color    _violet      'Base violet color           ' #c792ea
@var color    _gray        'Gray color                  ' #bbbbbb
@var color    _white       'White color                 ' #ffffff
@var color    _sh          'Shadow color                ' #00000025
==/UserStyle== */

// Color mixin.
/// All colors: `c: fg bd bg`
/// Only border-color: `c: 0 bd`
c(x, y = 0, z = 0, xi = 1, yi = 1, zi = 1) {
    if x != 0 && x != '_' {            color: xi is 0 ? x : x i }
    if y != 0 && y != '_' {     border-color: yi is 0 ? y : y i }
    if z != 0 && z != '_' { background-color: zi is 0 ? z : z i }
}

// SVG colors.
v(x, y = 0, xi = 1, yi = 1) {
    if x != 0 && x != '_' {   fill: xi is 0 ? x : x i }
    if y != 0 && y != '_' { stroke: yi is 0 ? y : y i }
}

// Pseudo-element builder.
P(a, _z = 0, _c = '', _p = absolute) {
    z-index:  _z;
    content:  _c;
    position: _p;
    if a[0] is a 'call' or a[0] is a 'unit' {    top: a[0] }
    if a[1] is a 'call' or a[1] is a 'unit' {  right: a[1] }
    if a[2] is a 'call' or a[2] is a 'unit' { bottom: a[2] }
    if a[3] is a 'call' or a[3] is a 'unit' {   left: a[3] }
}

// Bare RGB mixin.
/// Converts HEX to bare rrr-ggg-bbb format.
to_rgb(input) {
    unquote(slice(s('%s', rgba(input, 0)), 5, -3))
}

// Raw RGBA mixin.
/// Combine `*-rgb` vars and alpha value.
to_rgba(input, alpha) {
    unquote(s('rgba(var(--%s-rgb), %s)', unquote(input), alpha))
}

// Border radius mixin.
r() { border-radius: arguments }

// Box-shadow mixin.
b() { box-shadow: arguments }

/// Remove old browser prefixes.
vendors = official

/// Feat -> Base color-scheme toggle. #32
if (cg_theme == 'custom') {
    BG = cg_bg
    FG = cg_fg
    AC = cg_ac
} else if (cg_theme == 'old') {
    BG = #1f232a
    FG = #eeeeee
    AC = #7289da
} else if (cg_theme == 'new') {
    BG = #292929
    FG = #e6e6e6
    AC = #d47d3f
}

/// Helpers.
t  = transparent
i  = !important
BA = _bg_a
FA = _fg_a
AA = _ac_a
SA = _sc_a

// Color generator.
/// NOTE: Fix the scope to avoid conflicts.
/{
    g = global

    /// Generator rules.
    if (dark(BG)) {
        a1 = (AA + 15); a2 = (AA + 30); a3 = (AA + 45); a4 = (AA + 70); a5 = (AA + 80)
        s1 = (SA + 15); s2 = (SA + 30); s3 = (SA + 45); s4 = (SA + 70); s5 = (SA + 80)
        b1 = (BA + 10); b2 = (BA - 05); b3 = (BA - 10); b4 = (BA - 15); b5 = (BA - 20)
        f1 = (FA - 10); f2 = (FA + 10); f3 = (FA + 20); f4 = (FA + 30); f5 = (FA + 40)
    } else {
        a1 = (AA + 15); a2 = (AA + 30); a3 = (AA + 45); a4 = (AA + 65); a5 = (AA + 75)
        s1 = (SA + 15); s2 = (SA + 30); s3 = (SA + 45); s4 = (SA + 65); s5 = (SA + 75)
        b1 = (BA - 10); b2 = (BA + 08); b3 = (BA + 16); b4 = (BA + 24); b5 = (BA + 32)
        f1 = (FA - 05); f2 = (FA - 10); f3 = (FA - 15); f4 = (FA - 20); f5 = (FA - 30)
    }

    /// Generate tones for base colors.
    C = {
        bg: {
            '0': darken(BG, b1),
            '1': darken(BG, 0%),
            '2': darken(BG, b2),
            '3': darken(BG, b3),
            '4': darken(BG, b4),
            '5': darken(BG, b5),
        },
        fg: {
            '0': darken(FG, f1),
            '1': darken(FG, 0%),
            '2': darken(FG, f2),
            '3': darken(FG, f3),
            '4': darken(FG, f4),
            '5': darken(FG, f5),
        },
        ac: {
            '0': mix(darken(BG,  0%), AC, 0%),
            '1': mix(darken(BG, 40%), AC, a1),
            '2': mix(darken(BG, 40%), AC, a2),
            '3': mix(darken(BG, 40%), AC, a3),
            '4': mix(darken(BG, 65%), AC, a4),
            '5': mix(darken(BG, 50%), AC, a5),
        },
        b1: {
            '0': spin(_red,  0deg - 0%)
            '1': spin(_red, 15deg - s1)
            '2': spin(_red, 30deg - s2)
            '3': mix(darken(BG, 20%), _red, s3)
            '4': mix(darken(BG, 40%), _red, s4)
            '5': mix(darken(BG, 40%), _red, s5)
        },
        b2: {
            '0': spin(_orange,  0deg - 0%)
            '1': spin(_orange, 15deg - s1)
            '2': spin(_orange, 30deg - s2)
            '3': mix(darken(BG, 20%), _orange, s3)
            '4': mix(darken(BG, 40%), _orange, s4)
            '5': mix(darken(BG, 40%), _orange, s5)
        },
        b3: {
            '0': spin(_yellow,  0deg - 0%)
            '1': spin(_yellow, 15deg - s1)
            '2': spin(_yellow, 30deg - s2)
            '3': mix(darken(BG, 20%), _yellow, s3)
            '4': mix(darken(BG, 40%), _yellow, s4)
            '5': mix(darken(BG, 40%), _yellow, s5)
        },
        b4: {
            '0': spin(_green,  0deg - 0%)
            '1': spin(_green, 15deg - s1)
            '2': spin(_green, 30deg - s2)
            '3': mix(darken(BG, 20%), _green, s3)
            '4': mix(darken(BG, 40%), _green, s4)
            '5': mix(darken(BG, 40%), _green, s5)
        },
        b5: {
            '0': spin(_cyan,  0deg - 0%)
            '1': spin(_cyan, 15deg - s1)
            '2': spin(_cyan, 30deg - s2)
            '3': mix(darken(BG, 20%), _cyan, s3)
            '4': mix(darken(BG, 40%), _cyan, s4)
            '5': mix(darken(BG, 40%), _cyan, s5)
        },
        b6: {
            '0': spin(_blue,  0deg - 0%)
            '1': spin(_blue, 15deg - s1)
            '2': spin(_blue, 30deg - s2)
            '3': mix(darken(BG, 20%), _blue, s3)
            '4': mix(darken(BG, 40%), _blue, s4)
            '5': mix(darken(BG, 40%), _blue, s5)
        },
        b7: {
            '0': spin(_magenta,  0deg - 0%)
            '1': spin(_magenta, 15deg - s1)
            '2': spin(_magenta, 30deg - s2)
            '3': mix(darken(BG, 20%), _magenta, s3)
            '4': mix(darken(BG, 40%), _magenta, s4)
            '5': mix(darken(BG, 40%), _magenta, s5)
        },
        b8: {
            '0': spin(_violet,  0deg - 0%)
            '1': spin(_violet, 15deg - s1)
            '2': spin(_violet, 30deg - s2)
            '3': mix(darken(BG, 20%), _violet, s3)
            '4': mix(darken(BG, 40%), _violet, s4)
            '5': mix(darken(BG, 40%), _violet, s5)
        }
    }

    /// Generate Stylus-lang variables.
    define('bg-' + key, val, g) for key, val in C.bg
    define('fg-' + key, val, g) for key, val in C.fg
    define('ac-' + key, val, g) for key, val in C.ac
    define('b1-' + key, val, g) for key, val in C.b1
    define('b2-' + key, val, g) for key, val in C.b2
    define('b3-' + key, val, g) for key, val in C.b3
    define('b4-' + key, val, g) for key, val in C.b4
    define('b5-' + key, val, g) for key, val in C.b5
    define('b6-' + key, val, g) for key, val in C.b6
    define('b7-' + key, val, g) for key, val in C.b7
    define('b8-' + key, val, g) for key, val in C.b8

    /// Generate Stylus-lang helpers for CSS variables.
    define('bg' + key, s('var(--bg-%s)', unquote(key)), g) for key, val in C.bg
    define('fg' + key, s('var(--fg-%s)', unquote(key)), g) for key, val in C.fg
    define('ac' + key, s('var(--ac-%s)', unquote(key)), g) for key, val in C.ac
    define('b1' + key, s('var(--b1-%s)', unquote(key)), g) for key, val in C.b1
    define('b2' + key, s('var(--b2-%s)', unquote(key)), g) for key, val in C.b2
    define('b3' + key, s('var(--b3-%s)', unquote(key)), g) for key, val in C.b3
    define('b4' + key, s('var(--b4-%s)', unquote(key)), g) for key, val in C.b4
    define('b5' + key, s('var(--b5-%s)', unquote(key)), g) for key, val in C.b5
    define('b6' + key, s('var(--b6-%s)', unquote(key)), g) for key, val in C.b6
    define('b7' + key, s('var(--b7-%s)', unquote(key)), g) for key, val in C.b7
    define('b8' + key, s('var(--b8-%s)', unquote(key)), g) for key, val in C.b8
}

@-moz-document regexp('https?://((gist)\.)?github?.com(/.*)?') {
    /// Show debug.
    if (cg_debug) {
        body > div:first-child {
            margin-top: 2rem
            &::before {
                P: -2rem 0 calc(100vh - 3rem) 0, 0
                content: \
                    '  ⭐ BG: ' + luminosity(BG) + \
                    '  ⭐ FG: ' + luminosity(FG) + \
                    '  🌟 bg1: ' + bg-1 + \
                    '  🌟 fg1: ' + fg-1 + \
                    '  🌟 ac1: ' + ac-1
                text-align: center
                line-height: 2rem
                c: fg1 0 bg3
                b: 0 1px bg5
            }
        }
    }

    // Native CSS variables.
    :root,
    [data-color-mode='light'] {
        --color-scale-black: #1b1f23;
        --color-scale-white: #fff;
        --color-scale-gray-0: #fafbfc;
        --color-scale-gray-1: bg5 //#f6f8fa;
        --color-scale-gray-2: bg4 //#e1e4e8;
        --color-scale-gray-3: #d1d5da;
        --color-scale-gray-4: #959da5;
        --color-scale-gray-5: #6a737d;
        --color-scale-gray-6: #586069;
        --color-scale-gray-7: fg3 //#444d56;
        --color-scale-gray-8: #2f363d;
        --color-scale-gray-9: #24292e;
        --color-scale-blue-0: #f1f8ff;
        --color-scale-blue-1: b64 //#dbedff;
        --color-scale-blue-2: #c8e1ff;
        --color-scale-blue-3: #79b8ff;
        --color-scale-blue-4: #2188ff;
        --color-scale-blue-5: #0366d6;
        --color-scale-blue-6: #005cc5;
        --color-scale-blue-7: #044289;
        --color-scale-blue-8: #032f62;
        --color-scale-blue-9: b60 //#05264c;
        --color-scale-green-0: #f0fff4;
        --color-scale-green-1: #dcffe4;
        --color-scale-green-2: #bef5cb;
        --color-scale-green-3: #85e89d;
        --color-scale-green-4: #34d058;
        --color-scale-green-5: #28a745;
        --color-scale-green-6: #22863a;
        --color-scale-green-7: #176f2c;
        --color-scale-green-8: #165c26;
        --color-scale-green-9: #144620;
        --color-scale-yellow-0: #fffdef;
        --color-scale-yellow-1: #fffbdd;
        --color-scale-yellow-2: #fff5b1;
        --color-scale-yellow-3: #ffea7f;
        --color-scale-yellow-4: #ffdf5d;
        --color-scale-yellow-5: #ffd33d;
        --color-scale-yellow-6: #f9c513;
        --color-scale-yellow-7: #dbab09;
        --color-scale-yellow-8: #b08800;
        --color-scale-yellow-9: #735c0f;
        --color-scale-orange-0: #fff8f2;
        --color-scale-orange-1: #ffebda;
        --color-scale-orange-2: #ffd1ac;
        --color-scale-orange-3: #ffab70;
        --color-scale-orange-4: #fb8532;
        --color-scale-orange-5: #f66a0a;
        --color-scale-orange-6: #e36209;
        --color-scale-orange-7: #d15704;
        --color-scale-orange-8: #c24e00;
        --color-scale-orange-9: #a04100;
        --color-scale-red-0: b15 //#ffeef0;
        --color-scale-red-1: b14 //#ffdce0;
        --color-scale-red-2: #fdaeb7;
        --color-scale-red-3: #f97583;
        --color-scale-red-4: #ea4a5a;
        --color-scale-red-5: #d73a49;
        --color-scale-red-6: #cb2431;
        --color-scale-red-7: #b31d28;
        --color-scale-red-8: #9e1c23;
        --color-scale-red-9: #86181d;
        --color-scale-purple-0: #f5f0ff;
        --color-scale-purple-1: #e6dcfd;
        --color-scale-purple-2: #d1bcf9;
        --color-scale-purple-3: #b392f0;
        --color-scale-purple-4: #8a63d2;
        --color-scale-purple-5: #6f42c1;
        --color-scale-purple-6: #5a32a3;
        --color-scale-purple-7: #4c2889;
        --color-scale-purple-8: #3a1d6e;
        --color-scale-purple-9: #29134e;
        --color-scale-pink-0: #ffeef8;
        --color-scale-pink-1: #fedbf0;
        --color-scale-pink-2: #f9b3dd;
        --color-scale-pink-3: #f692ce;
        --color-scale-pink-4: #ec6cb9;
        --color-scale-pink-5: #ea4aaa;
        --color-scale-pink-6: #d03592;
        --color-scale-pink-7: #b93a86;
        --color-scale-pink-8: #99306f;
        --color-scale-pink-9: #6d224f;
        --color-auto-black: #1b1f23;
        --color-auto-white: bg0 //#fff;
        --color-auto-gray-0: #fafbfc;
        --color-auto-gray-1: bg5 //#f6f8fa;
        --color-auto-gray-2: bg4 //#e1e4e8;
        --color-auto-gray-3: #d1d5da;
        --color-auto-gray-4: #959da5;
        --color-auto-gray-5: #6a737d;
        --color-auto-gray-6: #586069;
        --color-auto-gray-7: fg3 //#444d56;
        --color-auto-gray-8: fg4 //#2f363d;
        --color-auto-gray-9: #24292e;
        --color-auto-blue-0: bg2 //#f1f8ff;
        --color-auto-blue-1: b64 //#dbedff;
        --color-auto-blue-2: ac3 //#c8e1ff;
        --color-auto-blue-3: #79b8ff;
        --color-auto-blue-4: #2188ff;
        --color-auto-blue-5: b63 //#0366d6;
        --color-auto-blue-6: b63 //#005cc5;
        --color-auto-blue-7: b60 //#044289;
        --color-auto-blue-8: #032f62;
        --color-auto-blue-9: b60 //#05264c;
        --color-auto-green-0: #f0fff4;
        --color-auto-green-1: #dcffe4;
        --color-auto-green-2: #bef5cb;
        --color-auto-green-3: #85e89d;
        --color-auto-green-4: #34d058;
        --color-auto-green-5: b43 //#28a745;
        --color-auto-green-6: b43 //#22863a;
        --color-auto-green-7: #176f2c;
        --color-auto-green-8: #165c26;
        --color-auto-green-9: #144620;
        --color-auto-yellow-0: #fffdef;
        --color-auto-yellow-1: b35 //#fffbdd;
        --color-auto-yellow-2: #fff5b1;
        --color-auto-yellow-3: #ffea7f;
        --color-auto-yellow-4: #ffdf5d;
        --color-auto-yellow-5: #ffd33d;
        --color-auto-yellow-6: b33 //#f9c513;
        --color-auto-yellow-7: #dbab09;
        --color-auto-yellow-8: #b08800;
        --color-auto-yellow-9: #735c0f;
        --color-auto-orange-0: #fff8f2;
        --color-auto-orange-1: #ffebda;
        --color-auto-orange-2: #ffd1ac;
        --color-auto-orange-3: #ffab70;
        --color-auto-orange-4: #fb8532;
        --color-auto-orange-5: #f66a0a;
        --color-auto-orange-6: #e36209;
        --color-auto-orange-7: #d15704;
        --color-auto-orange-8: #c24e00;
        --color-auto-orange-9: #a04100;
        --color-auto-red-0: b15 //#ffeef0;
        --color-auto-red-1: b14 //#ffdce0;
        --color-auto-red-2: #fdaeb7;
        --color-auto-red-3: #f97583;
        --color-auto-red-4: #ea4a5a;
        --color-auto-red-5: b13 //#d73a49;
        --color-auto-red-6: b13 //#cb2431;
        --color-auto-red-7: #b31d28;
        --color-auto-red-8: #9e1c23;
        --color-auto-red-9: #86181d;
        --color-auto-purple-0: #f5f0ff;
        --color-auto-purple-1: #e6dcfd;
        --color-auto-purple-2: #d1bcf9;
        --color-auto-purple-3: #b392f0;
        --color-auto-purple-4: #8a63d2;
        --color-auto-purple-5: b80 //#6f42c1;
        --color-auto-purple-6: #5a32a3;
        --color-auto-purple-7: #4c2889;
        --color-auto-purple-8: #3a1d6e;
        --color-auto-purple-9: #29134e;
        --color-auto-pink-0: #ffeef8;
        --color-auto-pink-1: #fedbf0;
        --color-auto-pink-2: #f9b3dd;
        --color-auto-pink-3: #f692ce;
        --color-auto-pink-4: #ec6cb9;
        --color-auto-pink-5: #ea4aaa;
        --color-auto-pink-6: #d03592;
        --color-auto-pink-7: #b93a86;
        --color-auto-pink-8: #99306f;
        --color-auto-pink-9: #6d224f;

        --color-text-primary: fg1 //#24292e;
        --color-text-secondary: fg3 //#586069;
        --color-text-tertiary: fg4 //#6a737d;
        --color-text-placeholder: fg5 //#6a737d;
        --color-text-disabled: fg5 //#6a737d;
        --color-text-inverse: fg1 //#fff;
        --color-text-link: ac0 //#0366d6;
        --color-text-danger: b10 //#cb2431;
        --color-text-success: b40 //#22863a;
        --color-text-warning: b30 //#b08800;

        --color-icon-primary: fg1 //#24292e;
        --color-icon-secondary: fg4 //#586069;
        --color-icon-tertiary: fg3 //#959da5;
        --color-icon-info: #0366d6;
        --color-icon-danger: #d73a49;
        --color-icon-success: #22863a;
        --color-icon-warning: #b08800;

        --color-state-hover-primary-bg: ac4 //#0366d6;
        --color-state-hover-primary-border: ac4 //#0366d6;
        --color-state-hover-primary-text: #fff;
        --color-state-hover-primary-icon: #fff;
        --color-state-hover-secondary-bg: bg3 //#f6f8fa;
        --color-state-hover-secondary-border: bg5 //#f6f8fa;
        --color-state-selected-primary-bg: ac3 //#0366d6;
        --color-state-selected-primary-border: ac3 //#0366d6;
        --color-state-selected-primary-text: #fff;
        --color-state-selected-primary-icon: #fff;
        --color-state-focus-border: b60 //#0366d6;
        --color-state-focus-shadow: 0 0 0 3px b65 //rgba(3,102,214,0.3);

        --color-border-primary: bg5 //#e1e4e8;
        --color-border-secondary: bg3 //#eaecef;
        --color-border-tertiary: bg4 //#d1d5da;
        --color-border-inverse: bg1 //#fff;
        --color-border-info: #0366d6;
        --color-border-danger: #d73a49;
        --color-border-success: #34d058;
        --color-border-warning: #f9c513;

        --color-bg-canvas: bg1 //#fff;            Main elements
        --color-bg-canvas-mobile: #fff;
        --color-bg-canvas-inverse: bg3 //#24292e; Navbar
        --color-bg-primary: bg1 //#fff;           Sidebar
        --color-bg-secondary: bg2 //#fafbfc;      Navigation/notices
        --color-bg-tertiary: bg3 //#f6f8fa;       Background
        --color-bg-overlay: #fff;
        --color-bg-info: b65 //#f1f8ff;
        --color-bg-info-inverse: b63 //#0366d6;
        --color-bg-danger: b15 //#ffeef0;
        --color-bg-danger-inverse: #d73a49;
        --color-bg-success: b45 //#dcffe4;
        --color-bg-success-inverse: #28a745;
        --color-bg-warning: b35 //#fff5b1;
        --color-bg-warning-inverse: #ffd33d;

        --color-shadow-small: 0 1px 0 #0002 //rgba(27,31,35,0.04);
        --color-shadow-medium: 0 3px 6px #0003 //rgba(149,157,165,0.15);
        --color-shadow-large: 0 8px 24px #0004 //rgba(149,157,165,0.2);
        --color-shadow-extra-large: 0 12px 48px rgba(149,157,165,0.3);
        --color-shadow-highlight: inset 0 1px 0 #0002 //hsla(0,0%,100%,0.25);
        --color-shadow-inset: inset 0 1px 0 #0002 //rgba(225,228,232,0.2);
        --color-shadow-focus: 0 0 0 3px rgba(3,102,214,0.3);

        --color-fade-black-10: #ffffff10 //#1b1f231a;
        --color-fade-black-15: #ffffff20 //#1b1f2326;
        --color-fade-black-30: #ffffff30 //#1b1f234d;
        --color-fade-black-50: #ffffff50 //#1b1f2380;
        --color-fade-black-70: #ffffff90 //#1b1f23b3;
        --color-fade-black-85: #ffffff85 //#1b1f23d9;
        --color-fade-white-10: #ffffff1a;
        --color-fade-white-15: #ffffff26;
        --color-fade-white-30: #ffffff4d;
        --color-fade-white-50: #ffffff80;
        --color-fade-white-70: #ffffffb3;
        --color-fade-white-85: #ffffffd9;

        --color-alert-info-text: fg1 //#24292e;
        --color-alert-info-icon: fg1 //rgba(4,66,137,0.6);
        --color-alert-info-bg: b65 //#dbedff;
        --color-alert-info-border: b64 //rgba(4,66,137,0.2);
        --color-alert-warn-text: fg1 //#24292e;
        --color-alert-warn-icon: b30 //#b08800;
        --color-alert-warn-bg: b35 //#fffbdd;
        --color-alert-warn-border: b34 //rgba(176,136,0,0.2);
        --color-alert-error-text: fg1 //#24292e;
        --color-alert-error-icon: b10 //rgba(158,28,35,0.6);
        --color-alert-error-bg: b15 //#ffe3e6;
        --color-alert-error-border: b14 //rgba(158,28,35,0.2);
        --color-alert-success-text: fg1 //#24292e;
        --color-alert-success-icon: b40 //rgba(23,111,44,0.8);
        --color-alert-success-bg: b45 //#dcffe4;
        --color-alert-success-border: b44 //rgba(23,111,44,0.2);

        --color-autocomplete-bg: bg3 //#fff;
        --color-autocomplete-border: bg5 //#e1e4e8;
        --color-autocomplete-row-border: bg4 //#eaecef;
        --color-autocomplete-shadow: 0 3px 6px #0002 //rgba(149,157,165,0.15);
        --color-blankslate-icon: #a3aab1;

        --color-btn-bg: bg3 //#fafbfc;
        --color-btn-border: bg5 //#1b1f2326;
        --color-btn-text: #24292e;
        --color-btn-ic: #6a737d;
        --color-btn-shadow: 0 1px 0 rgba(27,31,35,0.04);
        --color-btn-shadow-highlight: inset 0 1px 0 #fff0 //hsla(0,0%,100%,0.25);
        --color-btn-bg-hover: bg4 //#f3f4f6;
        --color-btn-bg-active: bg5 //#edeff2;
        --color-btn-shadow-active: inset 0 0.15em 0.3em rgba(27,31,35,0.15);
        --color-btn-shadow-input-focus: 0 0 0 0.2em rgba(3,102,214,0.3);
        --color-btn-primary-bg: b40 //#2ea44f;
        --color-btn-primary-border: #1b1f2326;
        --color-btn-primary-border-disabled: b44 //#1b1f231a;
        --color-btn-primary-text: bg0 //#fff;
        --color-btn-primary-ic: bg3 //#fffc;
        --color-btn-primary-shadow: 0 1px 0 rgba(27,31,35,0.1);
        --color-btn-primary-shadow-highlight: inset 0 1px 0 hsla(0,0%,100%,0.03);
        --color-btn-primary-shadow-selected: inset 0 1px 0 rgba(20,70,32,0.2);
        --color-btn-primary-bg-hover: b43 //#2c974b;
        --color-btn-primary-bg-active: b44 //#2a8f47;
        --color-btn-primary-bg-disabled: b45 //#94d3a2;
        --color-btn-primary-disabled-text: #fffc;
        --color-btn-primary-disabled-shadow: 0 0 0 3px rgba(46,164,79,0.4);
        --color-btn-primary-counter-bg: #fff3;
        --color-btn-inverse-on-hover-border: #1b1f2326;
        --color-btn-inverse-on-hover-shadow: 0 1px 0 rgba(27,31,35,0.1);
        --color-btn-inverse-on-hover-shadow-inset: inset 0 1px 0 hsla(0,0%,100%,0.03);
        --color-btn-inverse-on-hover-counter-bg: #fff3;
        --color-btn-danger-text: #d73a49;
        --color-btn-danger-text-disabled: #d73a4980;
        --color-btn-danger-bg-hover: #cb2431;
        --color-btn-danger-bg-active: #be222e;
        --color-btn-danger-shadow: inset 0 1px 0 rgba(134,24,29,0.2);
        --color-btn-danger-shadow-focus: 0 0 0 3px rgba(203,36,49,0.4);
        --color-btn-danger-counter-bg: #d73a491a;
        --color-btn-danger-counter-bg-disabled: #d73a490d;
        --color-btn-outline-text: b60 //#0366d6;
        --color-btn-outline-text-disabled: b63 //#0366d680;
        --color-btn-outline-bg-hover: b63 //#0366d6;
        --color-btn-outline-bg-active: b60 //#035fc7;
        --color-btn-outline-shadow: inset 0 1px 0 rgba(5,38,76,0.2);
        --color-btn-outline-shadow-focus: 0 0 0 3px rgba(0,92,197,0.4);
        --color-btn-outline-counter-bg: #0366d61a;
        --color-btn-outline-counter-bg-disabled: #0366d60d;
        --color-btn-counter-bg: #1b1f2314;

        --color-counter-text: fg1 //#24292e;
        --color-counter-bg: bg4 //#d1d5da80;
        --color-counter-border: #d1d5da80;
        --color-topic-tag-bg: #f1f8ff;
        --color-topic-tag-border: #f1f8ff;
        --color-topic-tag-text: #0366d6;

        --color-input-bg: bg2 //#fff;
        --color-input-contrast-bg: bg3 //#fafbfc;
        --color-input-border: bg5 //#e1e4e8;
        --color-input-shadow: inset 0 1px 2px rgba(27,31,35,0.075);
        --color-input-disabled-bg: bg1 //#fff;
        --color-input-disabled-border: bg3 //#e1e4e8;
        --color-input-warning-border: b30 //#f9c513;
        --color-input-error-border: b10 //#cb2431;

        --color-input-tooltip-success-text: #144620;
        --color-input-tooltip-success-bg: #dcffe4;
        --color-input-tooltip-success-border: #34d058;
        --color-input-tooltip-warning-text: #735c0f;
        --color-input-tooltip-warning-bg: #fff5b1;
        --color-input-tooltip-warning-border: #f9c513;
        --color-input-tooltip-error-text: #86181d;
        --color-input-tooltip-error-bg: #ffeef0;
        --color-input-tooltip-error-border: #f97583;

        --color-avatar-border: #1b1f231a;
        --color-avatar-stack-fade: #d1d5da;
        --color-avatar-stack-fade-more: #e1e4e8;
        --color-avatar-child-shadow: -2px -2px 0 hsla(0,0%,100%,0.8);
        --color-toast-ic-bg-loading: #586069;
        --color-timeline-text: fg3 //#444d56;
        --color-timeline-badge-bg: bg3 //#e1e4e8;
        --color-timeline-target-badge-border: ac3 //#2188ff;
        --color-timeline-target-badge-shadow: ac5 //#c8e1ff;
        --color-select-menu-backdrop-bg: #1b1f2380;
        --color-select-menu-shadow: 0 0 18px rgba(27,31,35,0.4);
        --color-select-menu-tap-highlight: #d1d5da80;
        --color-select-menu-tap-focus-bg: #dbedff;
        --color-box-blue-border: b63 //#c8e1ff;
        --color-box-row-yellow-bg: #fffbdd;
        --color-box-row-blue-bg: #f1f8ff;
        --color-box-header-blue-bg: #f1f8ff;
        --color-box-header-blue-border: #c8e1ff;

        --color-dropdown-bg: bg1 //#fff;
        --color-dropdown-border: bg5 //#e1e4e8;
        --color-dropdown-shadow: 0 8px 24px #0002 //rgba(149,157,165,0.2);

        --color-popover-border: bg5 //#1b1f2326;

        --color-branch-name-text: fg3 //#1b1f2399;
        --color-branch-name-icon: fg3 //#a8bbd0;
        --color-branch-name-bg: bg3 //#eaf5ff;
        --color-branch-name-link-text: ac0 //#0366d6;
        --color-branch-name-link-icon: fg3 //#a8bbd0;
        --color-branch-name-link-bg: bg3 //#eaf5ff;

        --color-markdown-code-bg: bg2 //#1b1f230d;
        --color-markdown-frame-border: #dfe2e5;
        --color-markdown-blockquote-border: bg4 //#dfe2e5;
        --color-markdown-table-border: bg5 //#dfe2e5;
        --color-markdown-table-tr-border: #c6cbd1;
        --color-header-text: fg3 //#ffffffb3;
        --color-header-bg: bg3 //#24292e;
        --color-header-logo: fg1 //#fff;
        --color-filter-item-bar-bg: #eff3f6;
        --color-hidden-text-expander-bg: bg4 //#dfe2e5;
        --color-hidden-text-expander-bg-hover: bg4 //#c6cbd1;
        --color-drag-and-drop-border: #c3c8cf;
        --color-upload-enabled-border: bg5 //#dfe2e5;
        --color-upload-enabled-border-focused: b60 //#4a9eff;
        --color-previewable-comment-form-border: #c3c8cf;
        --color-previewable-comment-form-bg: t //#fff; /// @upstream

        --color-underlinenav-border: rgba(209,213,218,0);
        --color-underlinenav-border-hover: bg5 //#d1d5da;
        --color-underlinenav-border-active: ac0 //#f9826c;
        --color-underlinenav-text: fg4 //#24292e;
        --color-underlinenav-text-hover: fg3 //#24292e;
        --color-underlinenav-text-active: fg1 //#24292e;
        --color-underlinenav-icon: fg4 //#959da5;
        --color-underlinenav-icon-hover: fg3 //#959da5;
        --color-underlinenav-icon-active: fg1 //#24292e;
        --color-underlinenav-counter-text: fg1 //#24292e;

        --color-social-count-bg: bg2 //#fff;
        --color-header-search-bg: fg3 //#24292e;
        --color-header-search-border: bg5 //#444d56;
        --color-icon-folder: #79b8ff;
        --color-hl-author-bg: #f1f8ff;
        --color-hl-author-border: #c8e1ff;
        --color-logo-subdued: #d1d5da;
        --color-discussion-border: #a2cbac;
        --color-diff-neutral-bg: bg5 //#d1d5da;
        --color-diff-deletion-bg: b10 //#cb2431;
        --color-diff-deletion-bg-strong: #1b1f23;
        --color-diff-deletion-border: #1b1f23;
        --color-diff-deletion-border-strong: #1b1f23;
        --color-diff-addition-bg: b40 //#2cbe4e;
        --color-diff-addition-bg-strong: #1b1f23;
        --color-diff-addition-border: #1b1f23;
        --color-diff-addition-border-strong: #1b1f23;
        --color-global-nav-logo: #fff;
        --color-global-nav-bg: #24292e;
        --color-global-nav-text: #fff;
        --color-global-nav-icon: #fff;
        --color-global-nav-input-bg: #fafbfc;
        --color-global-nav-input-border: #fafbfc;
        --color-global-nav-input-icon: #d1d5da;
        --color-global-nav-input-placeholder: #959da5;
        --color-calendar-graph-day-bg: #ebedf0;
        --color-calendar-graph-day-border: #1b1f230f;
        --color-calendar-graph-day-L1-bg: #9be9a8;
        --color-calendar-graph-day-L2-bg: #40c463;
        --color-calendar-graph-day-L3-bg: #30a14e;
        --color-calendar-graph-day-L4-bg: #216e39;
        --color-calendar-graph-day-L4-border: #1b1f230f;
        --color-calendar-graph-day-L3-border: #1b1f230f;
        --color-calendar-graph-day-L2-border: #1b1f230f;
        --color-calendar-graph-day-L1-border: #1b1f230f;
        --color-footer-invertocat-octicon: fg3 //#d1d5da;
        --color-footer-invertocat-octicon-hover: fg5 //#6a737d;
    }

    // Dark-GitLab variables.
    :root {
        /// Userstyle info.
        --note: 'Dark-GitHub v0.5.0'

        /// Custom fonts.
        --f-mono  : f_code, Consolas, Liberation Mono, Menlo, Courier, monospace
        --f-ui    : f_ui, Whitney, Helvetica Neue, Helvetica, Arial, sans-serif

        /// Generate color variables.
        for _v in (bg fg ac b1 b2 b3 b4 b5 b6 b7 b8) {
            for _i in 0..5 {
                key = s('--%s-%s', _v, _i)
                /// Escape `\` for `*-0` vars.
                val = _v + \- + _i

                /// Generate CSS variables.
                { key }: val i
                { key + '-rgb' }: to_rgb(val)
            }
        }
    }

    html {
        scrollbar-color: bg5 bg3

        body {
            /// Application background.
            &, .application-main > .bg-gray { c: 0 0 bg0 }
            .application-main { box-shadow: 0 -24px bg1 }

            /// Feat -> UI font.
            ui = f_ui, -apple-system, BlinkMacSystemFont, Segoe UI, Helvetica, \
                 Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji i
            font-family: ui

            /// Feat -> Code font.
            /// Diff linum/code, CodeMirror, commit reference, utility class.
            /.blob-num,
            /.blob-code-inner,
            /.CodeMirror-lines,
            /.commit-ref,
            /.text-mono {
                mono = f_mono, SFMono-Regular, Consolas, \
                       Liberation Mono, Menlo, monospace i
                font-family: mono
            }
        }

        /// Skeleton.
        /.Skeleton {
            background-image: linear-gradient(270deg, bg3, bg2, bg2, bg3)
        }

        /// Diff -> 'Display the rich diff' loader. @upstream
        .render-container { c: 0 0 bg1 }
        img.octospinner[src] { filter: opacity(0.6) }
    }

    // Better checkbox/radio inputs.
    input {
        r       = unquote
        prefix  = 'data:image/svg+xml;utf8,'
        prefix += '<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">'

        &[type='radio'],
        &[type='checkbox'] {
            &, &:focus, &:hover:active, &:disabled, &:hover:active:disabled {
                -webkit-appearance: none i
                -moz-appearance: none i
                appearance: none i
                height: 1rem i
                width: 1rem i
                border: 1px solid bg5 i
                background-size: cover i
                c: fg1 0 bg4
            }
            &:hover { box-shadow: 0 0 0 1px bg5 i }
        }

        &[type='radio']:checked {
            z = '<circle cx="256" cy="256" r="128" fill="white"/>'
            background-image: s("url('%s%s</svg>') %s", r(prefix), r(z), i)
            border-radius: 100% i
            &:checked { c: 0 ac0 ac0 }
        }

        &[type='checkbox']:checked {
            z ='<path fill="white" d="M99 213l-1 89 104 102 205-201v-91L203 315 99 213z"/>'
            background-image: s("url('%s%s</svg>') %s", r(prefix), r(z), i)
            c: 0 ac0 ac0
        }

        &[type='checkbox']:indeterminate {
            z = '<rect x="128" y="192" width="256" height="96" fill="white"/>'
            background-image: s("url('%s%s</svg>') %s", r(prefix), r(z), i)
            c: 0 b10 b10
        }
    }

    // Global -> Background color overrides.
    /// NOTE: Remaps bg1 to bg0.
    .profile-timeline-year-list,
    .tabnav {
        &.bg-white {
            c: 0 0 bg0
        }
    }
    .diffbar,
    .TimelineItem-break {
        c: 0 0 bg0
    }
    .form-actions .bg-gray-light { c: 0 0 bg1 }

    // Navbar.
    .js-header-wrapper {
        border-bottom: 1px solid bg5

        /// Feat -> Sticky navbar.
        if (navbar_sticky) {
            position: sticky i
            z-index: 99
            top: 0 i

            /// Fix progress bar position.
            .Progress { top: 0 }

            /// Dashboard -> Tweak top offset for sidebar items.
            /.dashboard-sidebar.is-stuck { margin-top: 60px i }
        }

        /// Search. @upstream
        .header-search-wrapper {
            c: 0 0 bg4
            input { c: fg1 }
        }

        /// Notifications. @upstream
        .mail-status {
            background-image: none i
            c: 0 0 ac0
        }

        /// Logged out style.
        .header-logged-out {
            padding-top: 3px i
            padding-bottom: 3px i
        }
    }

    // Navigation. @upstream
    .UnderlineNav-item {
        &.selected,
        &[role="tab"][aria-selected="true"],
        &[aria-current]:not([aria-current="false"]) {
            c: 0 ac0
        }
        &:focus, &:hover { c: 0 bg5 }
        /.UnderlineNav { b: inset 0 -1px 0 bg3 }
    }

    // Reset colors for tabs.
    .tabnav-tab {
        &.selected,
        &[aria-selected="true"],
        &[aria-current]:not([aria-current="false"]) {
            c: 0 0 bg0
        }
    }

    // Modals -> Overlay.
    .details-overlay-dark[open] > summary::before {
        opacity: 0.5
        c: 0 0 bg1
    }

    // Project -> Tags. @upstream
    .topic-tag {
        &-action, &-link {
            border: 1px solid b63 i
            c: fg2
            &:hover { c: 0 0 b64 }
        }
    }

    // Project -> File tree.
    .Box {
        /// Use lighter background color for focused items.
        &-row--focus-gray.navigation-focus { c: 0 0 bg2 }

        /// Border color for modals.
        &--overlay { c: 0 bg5 }

        /// Tree items.
        &-row.js-navigation-item {
            c: 0 bg4

            /// Fix double border in issues.
            &:first-of-type { c: 0 t }
        }

        /// Remove background from avatar groups.
        /.AvatarStack-body { c: 0 0 t }

        /// Feat -> Old readme header design.
        if (readme_header) {
            &-header.border-bottom-0 {
                border-bottom: 1px solid bg5 i
                c: 0 0 bg2

                /// Fix padding in the body.
                + .Box-body { padding-top: 32px i }
            }
        }

        /// Feat -> Neutral colors in latest commit.
        if (latest_commit) {
            &-header--blue { c: 0 bg5 bg2 }

            /// Commit details.
            /.full-commit {
                c: 0 0 bg2
                p.commit-title { c: fg1 }
            }
        }

        /// Feat -> Shorter headers.
        if (short_headers) {
            condition = (readme_header == 1) ? '' : '--blue'
            /.repository-content &-header{ condition } {
                padding-top: 8px
                padding-bottom: 7px

                /// Smaller avatars.
                .avatar[style*='width:24px'] {
                    margin-top: 2px
                    margin-left: 2px
                    &, img {
                        width: 20px i
                        height: @width
                    }
                }
            }
        }
    }

    // Project -> Insights.
    .menu-item {
        c: 0 bg5
        &.selected::before,
        &[aria-selected="true"]::before,
        &[aria-current]:not([aria-current="false"])::before {
            c: 0 0 ac0
        }

        /// Graphs -> Contributors.
        /.graphs {
            .tint-box, .capped-card-content {
                c: 0 0 bg2
            }
            line[stroke*='#000'] { v: 0 bg4 }
        }

        /// Graphs -> Traffic.
        /.traffic-graph {
            text[fill='#000'] { v: fg1 }
            line[stroke='#000'] { v: 0 bg4 }

            /// Add whitespace. @upstream
            &-stats {
                c: 0 bg5
                ul > li {
                    padding: 1rem
                    text-align: center
                    c: fg1 0 bg2
                    &:first-of-type {
                        border-radius: 0 0 0 6px
                        border-right: 1px solid bg5
                    }
                    &:last-of-type { border-radius: 0 0 6px 0 }
                }
            }
        }

        /// Graphs -> Pulse.
        /.graph-canvas {
            text[fill='#000'] { v: fg1 }
            line[stroke*='#000'] { v: 0 bg4 }
        }

        /// Tables.
        /.gutter table.capped-list th { c: 0 bg4 }
    }

    // Diff -> Changes. @upstream
    .blob {
        &-num-addition { c: 0 0 b44 }
        &-code {
            &-addition { c: 0 0 b45 }

            /// Inline diffs.
            &-addition .x { c: white 0 b43 }
            &-deletion .x { c: white 0 b13 }
        }

        /// Rich diff. @upstream
        /.prose-diff {
            .changed {
                .added, ins, ins code, ins pre { c: 0 b43 b45 }
            }
            .rich-diff-level-zero.added,
            .markdown-body > ins {
                b: inset 4px 0 0 b43 i
            }
        }

        /// Line numbers.
        &-num {
            c: fg5
            &:hover { c: fg3 }
        }

        /// Line highlight.
        /table.highlight > tbody > tr {
            &:hover > td { c: 0 0 bg2 }
            &:hover > td.highlighted { c: 0 0 b34 }
        }
    }

    // Notes -> Resets.
    .timeline-comment {
        &--caret {
            &::before { border-right-color: bg5 }
            &::after { border-right-color: bg3 i }
        }

        /// Merged pull requests. @upstream
        /.branch-action {
            &-state-merged &-body {
                c: 0 b73
                &[class*='-caret']::before { border-right-color: b70 i }
                &[class*='-caret']::after { border-right-color: bg1 i }
            }
        }

        /// Reset header background.
        &-header { c: 0 0 bg3 }

        /// Remove borders from input box.
        &-wrapper { c: 0 t }

        /// Remove header/input backgrounds.
        /.gh-header, /.discussion-timeline-actions { c: 0 0 t }

        /// Badges.
        /.TimelineItem-badge { --color-bg-canvas: var(--bg-0) }

        /// Subscribe to updates.
        /.thread-subscription-status { c: 0 bg5 t }
    }

    // Profile -> Calendar graph. @upstream
    .calendar-graph {
        rect[fill*='#ebedf0'] { v: bg2 }
        rect[fill*='#9be9a8'] { v: ac0; fill-opacity: 0.25 }
        rect[fill*='#40c463'] { v: ac0; fill-opacity: 0.50 }
        rect[fill*='#30a14e'] { v: ac0; fill-opacity: 0.75 }
        rect[fill*='#216e39'] { v: ac0; fill-opacity: 1.00 }
    }
    .legend {
        [style*='#ebedf0'] { c: 0 0 bg2 }
        [style*='#9be9a8'] { c: 0 0 ac0; opacity: 0.25 }
        [style*='#40c463'] { c: 0 0 ac0; opacity: 0.50 }
        [style*='#30a14e'] { c: 0 0 ac0; opacity: 0.75 }
        [style*='#216e39'] { c: 0 0 ac0; opacity: 1.00 }
    }

    // Markdown.
    .markdown-body {
        code, tt { border: 1px solid bg5 }
    }

    // Code -> Syntax highlighting.
    .pl- {
        &k { color: b10 }
        &c { color: fg5 }
        &ent { color: b40 }
        &e, &en { color: b30 }
        &smw, &v { color: b20 }
        &c1, &s &v { color: b60 }
        &s &s1, &smi { color: b80 }
        &pds, &s, &s &pse &s1, &sr, &sr &cce, &sr &sra, &sr &sre { color: b40 }
    }

    // Code -> CodeMirror editor.
    .CodeMirror {
        &[class*='github-light'] {
            c: fg1 0 bg1
            r: 0 0 6px 6px
        }
        &-lines, &-gutters { c: 0 0 bg1 }
        &-linenumber { c: fg4 }

        /// Gist -> Editor backaground.
        /.file.js-code-editor { c: 0 0 bg1 }
    }

    // Extension -> Gitako.
    /// Link: https://github.com/EnixCoda/Gitako
    /// TODO: Maybe switch to different background colors.
    .gitako-ready {
        /// Logo.
        .gitako-toggle-show-button { height: 60px i }

        /// Colors.
        /.gitako-side-bar {
            a { c: ac0 }

            /// Resets.
            &-body { c: 0 bg5 bg2 }
            .header .meta-bar {
                min-height: 62px i
                c: 0 0 bg3
                [class*='BranchName-'] { c: fg3 0 bg4 }
                [class*='Breadcrumb']::after { c: fg3 }
            }
            .loading-indicator-container { c: 0 bg5 }

            /// Files.
            .file-explorer {
                .search-input {
                    c: fg1 bg5 bg2
                    border-left: none
                    border-right: none
                    padding: 6px 0
                }
                .node-item {
                    c: fg1 bg4 bg2
                    &:hover { c: 0 0 bg3 }
                    &:active, &.focused { c: 0 0 bg4 }
                }
                mark { c: white 0 ac0 }
            }

            /// Footer.
            .gitako-settings-bar {
                c: 0 0 bg2
                .header-row { c: 0 bg5 }
            }

            /// Buttons.
            .close-side-bar-button { c: 0 0 bg3 }
            .settings-button { c: 0 0 bg2 }
            .octicon { c: fg3 }

            /// Resize.
            .gitako-resize-handler { c: 0 bg5 bg3 }
        }

        /// Fixes for experimental "shrink" feature.
        &.shrink-github-header {
            /// Adjust header/icon sizes.
            @media (min-width: 1280px) {
                .Header { padding: 16px i }
             }

             /// Reset backgrounds for header and navigation.
            .js-header-wrapper { c: 0 0 bg3 }
            main > :first-child { b: inset 0 -1px 0 bg3 }
        }

        /// Clippy in code blocks.
        /.clippy-wrapper .clippy {
            c: 0 bg5 bg4
            i { filter: invert(0.8) }
            &:hover { c: 0 0 bg5 }
        }
    }

    // Extension -> GitHub Original Streak.
    /// Link: https://github.com/Naramsim/GithubOriginalStreak
    .original-streak {
        .contrib-number { c: fg1 }
        .text-muted { c: fg3 }
    }
}

@-moz-document regexp('https?://render\.githubusercontent?.com(/.*)?') {
    :root { --bg-1: bg-1 }
    .render-shell {
        img[src*='svg']:hover { filter: invert() hue-rotate(180deg) }
        &, /body {
            background-image: none
            c: 0 0 bg1
        }
    }
}
